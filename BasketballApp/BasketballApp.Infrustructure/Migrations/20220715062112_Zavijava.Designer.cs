// <auto-generated />
using BasketballApp.Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasketballApp.Infrustructure.Migrations
{
    [DbContext(typeof(BasketballAppContext))]
    [Migration("20220715062112_Zavijava")]
    partial class Zavijava
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BasketballApp.Domain.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            TeamId = 1,
                            Name = "Los Angeles Lakers",
                            State = "Claifornia"
                        },
                        new
                        {
                            TeamId = 2,
                            Name = "Los Angeles Clippers",
                            State = "Claifornia"
                        },
                        new
                        {
                            TeamId = 3,
                            Name = "Golden State Warriors",
                            State = "Claifornia"
                        },
                        new
                        {
                            TeamId = 4,
                            Name = "Phoenix Suns",
                            State = "Arizona"
                        },
                        new
                        {
                            TeamId = 5,
                            Name = "Denvor Nuggets",
                            State = "Colorado"
                        },
                        new
                        {
                            TeamId = 6,
                            Name = "Miami Heat",
                            State = "Florida"
                        },
                        new
                        {
                            TeamId = 7,
                            Name = "Orlando Magic",
                            State = "Florida"
                        },
                        new
                        {
                            TeamId = 8,
                            Name = "Atlanta Hawks",
                            State = "Georgia"
                        },
                        new
                        {
                            TeamId = 9,
                            Name = "Chicago Bulls",
                            State = "Illinois"
                        },
                        new
                        {
                            TeamId = 10,
                            Name = "Boston Celtics",
                            State = "Massachusetts"
                        });
                });

            modelBuilder.Entity("BasketballApp.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "seanpietersen7@gmail.com",
                            FirstName = "Sean",
                            LastName = "Pietersen",
                            Password = "Sean1234"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "jase.pietersen7@gmail.com",
                            FirstName = "Jason",
                            LastName = "Pietersen",
                            Password = "Jason1234"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "pfpietersen@gmail.com",
                            FirstName = "Percival",
                            LastName = "Pietersen",
                            Password = "Percy1234"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "cmpietersen7@gmail.com",
                            FirstName = "Claudia",
                            LastName = "Pietersen",
                            Password = "Claudia1234"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "rumerkerm@gmail.com",
                            FirstName = "Rumer",
                            LastName = "Manis",
                            Password = "Rumer1234"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
